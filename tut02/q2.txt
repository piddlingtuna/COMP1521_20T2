Show what the following decimal values look like in 8-bit binary, 3-digit octal, and 2-digit hexadecimal:

a. 1 = 0b000001 = 0o001 = 0x01


b. 8 = 0b00001000 = 0o010 = 0x08

hexadecimal = 0 - f
0 - 9
A = 10
B = 11
C = 12
D = 13
E = 14
F = 15

1 * 8 + 0 * 4 + 0 * 2 + 0 * 1

(0-7) * 64 + (0-7) * 8 + (0-7) * 1
0 * 1 + 0 * 2 + 0 * 4 + 1 * 8 ....


c. 10 = 0b00001010 = 0o12 = 0x0A

(0-7) * 64 + (0-7) * 8 + (0-7) * 1

(0-7) * 64 + (0-7) * 8 + (0-7) * 1
10 - 8 = 2
2 - 2 = 0

1 * 8 + 0 * 4 + 1 * 2 * 0 * 1
1/0 * 1 + 1/0 * 2 + 1/0 * 4 + 1/0 * 8

d. 15 = 0b00001111 = 0o017 = 0x0f
15 - 8 = 7
7 - 4 = 3
2 - 1 = 1
1 - 1 = 0

1 * 8 + 1 * 4 + 1 * 2 *  1 * 1


c. 16


d. 100


e. 127


f. 200


How could I write a C program to answer this question?

